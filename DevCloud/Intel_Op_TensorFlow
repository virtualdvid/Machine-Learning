#Use jupyter terminal

conda create -n python3x -c intel python=3
source activate python3x
pip install --upgrade pip
pip install keras
conda install -c conda-forge bazel
conda install patch
pip install --upgrade setuptools
cd .conda/envs/python3x/lib/python3.6/site-packages
pip uninstall tensorflow
rm -rf tensorflow 
git clone https://github.com/tensorflow/tensorflow.git
cd tensorflow
git checkout r1.8
bazel clean
bazel shutdown

#all options with 'n' except kafka 'y'
./configure

#PATH = output
which gcc
export PATH=/glob/development-tools/gcc/bin:$PATH
export LD_LIBRARY_PATH=/glob/development-tools/gcc/lib64:$LD_LIBRARY_PATH
bazel build --config=mkl -c opt --copt=-mavx --copt=-mavx2 --copt=-mfma --copt=-mavx512f --copt=-mavx512pf --copt=-mavx512cd --copt=-mavx512er --copt="-DEIGEN_USE_VML" //tensorflow/tools/pip_package:build_pip_package
#bazel build --config=mkl --copt=”-DEIGEN_USE_VML” -c opt //tensorflow/tools/pip_package:build_pip_package
#Use if command above fails
#bazel build --config=mkl -c opt //tensorflow/tools/pip_package:build_pip_package
bazel-bin/tensorflow/tools/pip_package/build_pip_package /home/uxxxxx/tensorflow_pkg

#--user if you aren't using a conda env
pip install --ignore-installed /home/uxxxxx/tensorflow_pkg/tensorflow-1.7.1-cp36-cp36m-linux_x86_64.whl
pip install --ignore-installed /home/uxxxxx/tensorflow_pkg/tensorflow-1.8.0-cp36-cp36m-linux_x86_64.whl
